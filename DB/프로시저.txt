create sequence ordering_no_seq
increment by 1
start with 1
minvalue 1
maxvalue 100
nocycle
nocache;

DROP TABLE member CASCADE CONSTRAINTS;

CREATE TABLE member (
    id        VARCHAR2(1000) NOT NULL,
    password  VARCHAR2(1000),
    name      VARCHAR2(50) NOT NULL,
    email     VARCHAR2(50) NOT NULL,
    phone     VARCHAR2(50),
    profile_img VARCHAR2(1000),
    nickname  VARCHAR2(50)
);

ALTER TABLE member ADD CONSTRAINT member_pk PRIMARY KEY ( id );


DROP TABLE product CASCADE CONSTRAINTS;

DROP TABLE product_images CASCADE CONSTRAINTS;

CREATE TABLE product (
    no                  NUMBER(5) NOT NULL,
    name                VARCHAR2(100) NOT NULL,
    price               NUMBER(10) NOT NULL,
    description         VARCHAR2(1000) NOT NULL,
    detail_description  VARCHAR2(1000) NOT NULL,
    category            VARCHAR2(100) NOT NULL,
    sku                 VARCHAR2(500) NOT NULL
);

ALTER TABLE product ADD CONSTRAINT product_pk PRIMARY KEY ( no );

CREATE TABLE product_images (
    product_no  NUMBER(5) NOT NULL,
    image_path        VARCHAR2(1000) NOT NULL
);

ALTER TABLE product_images ADD CONSTRAINT product_images_pk PRIMARY KEY ( image_path,
                                                                          product_no );

ALTER TABLE product_images
    ADD CONSTRAINT product_images_product_fk FOREIGN KEY ( product_no )
        REFERENCES product ( no );


DROP TABLE shoppingcart CASCADE CONSTRAINTS;

CREATE TABLE shoppingcart (
    member_id  VARCHAR2(500) NOT NULL,
    no         NUMBER(5) NOT NULL,
    name       VARCHAR2(100) NOT NULL,
    price      NUMBER(10) NOT NULL,
    quantity   NUMBER(5) NOT NULL,
    image      VARCHAR2(1000) NOT NULL
);

ALTER TABLE shoppingcart ADD CONSTRAINT shoppingcart_pk PRIMARY KEY ( no,
                                                                      member_id );
ALTER TABLE shoppingcart
    ADD CONSTRAINT shoppingcart_member_fk FOREIGN KEY ( member_id )
        REFERENCES member ( id );

DROP TABLE ordering CASCADE CONSTRAINTS;

CREATE TABLE ordering (
    ordering_no  NUMBER(10) NOT NULL,
    member_id    VARCHAR2(1000) NOT NULL,
    no           NUMBER(5) NOT NULL,
    name         VARCHAR2(100) NOT NULL,
    price        NUMBER(10) NOT NULL,
    quantity     NUMBER(5) NOT NULL,
    image        VARCHAR2(1000) NOT NULL,
    order_date   VARCHAR2(100) NOT NULL
);

ALTER TABLE ordering ADD CONSTRAINT ordering_pk PRIMARY KEY ( ordering_no );

ALTER TABLE ordering
    ADD CONSTRAINT ordering_member_fk FOREIGN KEY ( member_id )
        REFERENCES member ( id );

drop package member_pkg;

create or replace package member_pkg
is
    procedure select_member(input_id in varchar2,
    res_cur out sys_refcursor);
    
    procedure insert_member(input_id in varchar2,
    input_password in varchar2,
    input_name in varchar2,
    input_email in varchar2,
    input_phoneNumber in varchar2);
    
    procedure select_memberByEmail(input_email in varchar2,
    res_cur out sys_refcursor);
    
    procedure select_memberByPhone(input_phone in varchar2,
    res_cur out sys_refcursor);
    
    procedure login_member(input_id in varchar2,
    input_pw in varchar2,
    res_cur out sys_refcursor);
    
    procedure select_profile(input_id in varchar2,
    res_nickname out varchar2,
    res_profile_img out varchar2);
    
    procedure update_profile(input_id in varchar2,
    input_nickname in varchar2,
    input_image in varchar2);
    
    procedure login_google(input_id in varchar2,
    input_name in varchar2,
    input_email in varchar2,
    input_nickname in varchar2,
    input_image in varchar2,
    res_cur out sys_refcursor);
    
    procedure select_memberbyid(input_id in varchar2,
    res_cur out sys_refcursor);
    
    procedure login_naver(input_id in varchar2,
    input_name in varchar2,
    input_email in varchar2,
    input_phone in varchar2,
    input_image in varchar2,
    input_nickname in varchar2,
    res_cur out sys_refcursor);
end member_pkg;


create or replace package body member_pkg
is
    procedure select_member(input_id in varchar2,
    res_cur out sys_refcursor)
    as
    begin
        open res_cur for
        select * from member
        where id = input_id;
    end select_member;
    
    procedure insert_member(input_id in varchar2,
        input_password in varchar2,
        input_name in varchar2,
        input_email in varchar2,
        input_phoneNumber in varchar2)
    as
    begin  
        insert into member(id, password, name, email, phone, profile_img)
        values(input_id, input_password, input_name, input_email,
        input_phoneNumber, 'https://d3gr4nmrit7xq0.cloudfront.net/default_profile.png');
        commit;
    end insert_member;
    
    procedure select_memberByEmail(input_email in varchar2,
    res_cur out sys_refcursor)
    as
    begin
        open res_cur for
        select * from member
        where email = input_email;
    end select_memberByEmail;
    
    procedure select_memberByPhone(input_phone in varchar2,
    res_cur out sys_refcursor)
    as
    begin
        open res_cur for
        select * from member
        where phone = input_phone;
    end select_memberByPhone;
    
    procedure login_member(input_id in varchar2,
    input_pw in varchar2,
    res_cur out sys_refcursor)
    as
    begin
        open res_cur for
        select * from member
        where id = input_id and password = input_pw;
    end login_member;
    
    procedure select_profile(input_id in varchar2,
    res_nickname out varchar2,
    res_profile_img out varchar2)
    as
    begin
        select nickname, profile_img into res_nickname, res_profile_img
        from member
        where id = input_id;
    end select_profile;
    
    procedure update_profile(input_id in varchar2,
    input_nickname in varchar2,
    input_image in varchar2)
    as
    begin
        update member
        set nickname = input_nickname,  profile_img = input_image
        where id = input_id;
        commit;
    end update_profile;
    
    procedure login_google(input_id in varchar2,
    input_name in varchar2,
    input_email in varchar2,
    input_nickname in varchar2,
    input_image in varchar2,
    res_cur out sys_refcursor)
    as
        cnt number(5) := 0;
    begin
        select count(*) into cnt
        from member
        where id = input_id;
        
        if cnt = 0 then
            insert into member(id, password, name, email, phone, profile_img, nickname)
            values(input_id, null, input_name, input_email, null, input_image, input_nickname);
            commit;
        end if;
        open res_cur for
        select * 
        from member
        where id = input_id;
    end login_google;
    
    procedure select_memberbyid(input_id in varchar2,
    res_cur out sys_refcursor)
    as
    begin
        open res_cur for
        select *
        from member
        where id = input_id;
    end select_memberbyid;
    
    procedure login_naver(input_id in varchar2,
    input_name in varchar2,
    input_email in varchar2,
    input_phone in varchar2,
    input_image in varchar2,
    input_nickname in varchar2,
    res_cur out sys_refcursor)
    as
        cnt number(5) := 0;
    begin
        select count(*) into cnt
        from member
        where id = input_id;
        
        if cnt = 0 then
            insert into member(id, password, name, email, phone, profile_img, nickname)
            values(input_id, null, input_name, input_email, input_phone, input_image, input_nickname);
            commit;
        end if;
        open res_cur for
        select * 
        from member
        where id = input_id;
    end login_naver;
end member_pkg;

drop package product_pkg;

create or replace package product_pkg
is
    procedure select_product(res_cur out sys_refcursor);
    
    procedure select_productimage(input_no in number,
    res_cur out sys_refcursor);
    
    procedure select_productdetail(input_no in number,
    res_cur out sys_refcursor);
    
    procedure select_productdetailbycategory(input_no in number,
    input_category in varchar2,
    res_cur out sys_refcursor);
    
    procedure addCart(input_ID in varchar2,
    input_no in number,
    input_name in varchar2,
    input_price in number,
    input_cnt in number,
    input_image in varchar2);
    
    procedure select_cart(input_id in varchar2,
    res_cur out sys_refcursor);
    
    procedure quantityUpdate(input_id in varchar2,
    input_no in number,
    input_cnt in number,
    res_cur out sys_refcursor);
    
    procedure removeProduct(input_id in varchar2,
    input_no in number,
    res_cur out sys_refcursor);
    
    procedure selectProductByNo(
    input_no in number,
    res_cur out sys_refcursor);
    
    procedure insertOrderlist(input_id in varchar2,
    input_order_date in varchar2);
    
    procedure select_ordering(input_id in varchar2,
    res_cur out sys_refcursor);
    
    procedure selectshoppingcart(input_id in varchar2,
    res_cur out sys_refcursor);
end product_pkg;

create or replace package body product_pkg
is
    procedure select_product(res_cur out sys_refcursor)
    as
    begin
        open res_cur for
        select *
        from product;
    end select_product;
    
    procedure select_productimage(input_no in number,
    res_cur out sys_refcursor)
    as
    begin
        open res_cur for
        select *
        from product_images
        where input_no = product_no;
    end select_productimage;
    
    procedure select_productdetail(input_no in number,
    res_cur out sys_refcursor)
    as
    begin
        open res_cur for
        select *
        from product
        where no = input_no;
    end select_productdetail;

    procedure select_productdetailbycategory(input_no in number,
    input_category in varchar2,
    res_cur out sys_refcursor)
    as
    begin
        open res_cur for
        select *
        from product
        where category = input_category and no != input_no;
    end select_productdetailbycategory;
    
    procedure addCart(input_ID in varchar2,
    input_no in number,
    input_name in varchar2,
    input_price in number,
    input_cnt in number,
    input_image in varchar2)
    as
        cnt number(5) := 0;
    begin
        select count(*) into cnt
        from shoppingcart
        where member_id = input_id and no = input_no;
        
        if cnt > 0 then
            update shoppingcart
            set quantity = quantity + input_cnt
            where member_id = input_id and no = input_no;
            commit;
        else
            insert into shoppingcart
            values(input_id, input_no, input_name, input_price, input_cnt, input_image);
            commit;
        end if;
    end addCart;
    
    procedure select_cart(input_id in varchar2,
    res_cur out sys_refcursor)
    as
    begin
        open res_cur for
        select *
        from shoppingcart
        where member_id = input_id;
    end select_cart;
    
    procedure quantityUpdate(input_id in varchar2,
    input_no in number,
    input_cnt in number,
    res_cur out sys_refcursor)
    as
    begin
        update shoppingcart
        set quantity = input_cnt
        where member_id = input_id and no = input_no;
        commit;
        
        open res_cur for
        select *
        from shoppingcart
        where member_id = input_id;
    end quantityUpdate;
    
    procedure removeProduct(input_id in varchar2,
    input_no in number,
    res_cur out sys_refcursor)
    as
    begin
        delete from shoppingcart
        where member_id = input_id and no = input_no;
        commit;
        
        open res_cur for
        select *
        from shoppingcart
        where member_id = input_id;
    end removeProduct;
    
    procedure selectProductByNo(input_no in number,
    res_cur out sys_refcursor)
    as
    begin
        open res_cur for
        select *
        from product
        where no = input_no;
    end selectProductByNo;
    
    procedure insertOrderlist(input_id in varchar2,
    input_order_date in varchar2)
    as
        V_SHOPPINGCART_ROW shoppingcart%ROWTYPE;
        CURSOR now_cur is
            select * from shoppingcart
            where member_id = input_id;
    begin        
        open now_cur;
        loop
            fetch now_cur into V_SHOPPINGCART_ROW;
            EXIT WHEN now_cur%NOTFOUND;
            insert into ordering
            values(ordering_no_seq.nextval, 
            V_SHOPPINGCART_ROW.member_id, V_SHOPPINGCART_ROW.no,
            V_SHOPPINGCART_ROW.name, V_SHOPPINGCART_ROW.price,
            V_SHOPPINGCART_ROW.quantity, V_SHOPPINGCART_ROW.image,
            input_order_date);
        end loop;    
        delete from shoppingcart
        where member_id = input_id;
        commit;
    end insertOrderlist;
    
    procedure select_ordering(input_id in varchar2,
    res_cur out sys_refcursor)
    as
    begin
        open res_cur for
        select *
        from ordering
        where member_id = input_id;
    end select_ordering;
    
    procedure selectshoppingcart(input_id in varchar2,
    res_cur out sys_refcursor)
    as
    begin
        open res_cur for
        select *
        from shoppingcart
        where member_id = input_id;
    end selectshoppingcart;
end product_pkg;

insert into product
values(1, '콩국수', 68000, '맛있는 콩국수입니다~', '콩국수는 몸에 정말 좋아요 많이 드세요.', '국수', '1234567');


insert into product
values(2, '쌀국수', 34000, '맛없는 쌀국수입니다~', '쌀국수는 몸에 좋아요. 많이많이 드세요.', '국수', '1234565');

insert into product_images
values(2, 'https://d3gr4nmrit7xq0.cloudfront.net/%EC%8C%80%EA%B5%AD%EC%88%981.jpg');

insert into product_images
values(2, 'https://d3gr4nmrit7xq0.cloudfront.net/%EC%8C%80%EA%B5%AD%EC%88%982.jpg');

insert into product_images
values(1, 'https://d3gr4nmrit7xq0.cloudfront.net/%EC%BD%A9%EA%B5%AD%EC%88%981.jpg');

insert into product_images
values(1, 'https://d3gr4nmrit7xq0.cloudfront.net/%EC%BD%A9%EA%B5%AD%EC%88%982.jpg');
commit;

select * from member;
select * from product;
select * from shoppingcart;
select * from ordering;
